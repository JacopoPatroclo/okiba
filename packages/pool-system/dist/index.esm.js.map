{"version":3,"file":"index.esm.js","sources":["../index.js"],"sourcesContent":["/**\n * @module PoolSystem\n * @description Manages a dinamically grown pool of DOM Elements\n * import PoolSystem from '@okiba/pool-system'\n *\n * @example\n * const container = document.querySelector('#container')\n *\n * function createEl(){\n *  return document.createElement('img');\n * }\n *\n * const pool = new PoolSystem(container, createEl)\n */\n\nclass PoolSystem {\n  /**\n   * @param {Object} parent DOM Element used as container for all pool elements.\n   * @param {Function} createEl Function that creates an istance the element you want to add to the pool.\n   */\n  constructor(parent, createEl) {\n    this.parent = parent\n    this.createEl = createEl\n    this.size = 0\n    this.pool = []\n  }\n\n  /**\n   * Makes sure the pool can host a minimum number of elements,\n   * grows it if that's not the case.\n   *\n   * @param {Number} size Minimum pool size to ensure.\n   */\n\n  ensure(size) {\n    if (this.size >= size) return\n\n    const diff = size - this.size\n\n    for (let index = 0; index < diff; index++) {\n      const el = this.createEl()\n      this.pool.push(el)\n      this.parent.appendChild(el)\n    }\n\n    this.size = size\n  }\n\n  /**\n   * Hands a free element from the pool.\n   * If there isn't one, it automatically grows the pool's.\n   * This provides dynamic sizing which ensures\n   *\n   * @returns {Element} A free DOM Element\n   */\n  get() {\n    if (!this.pool.length) {\n      this.ensure(this.size + 1)\n    }\n\n    return this.pool.pop()\n  }\n  /**\n   * Marks an element as elegible for reutilization,\n   * and pushes it into the pool\n   *\n   * @param {Element} Element to mark as free\n   */\n  free(el) {\n    this.pool.push(el)\n  }\n\n  /**\n   * Nulls all references to DOM Elements\n   */\n  destroy() {\n    this.pool = null\n    this.parent = null\n    this.createEl = null\n    this.size = null\n  }\n}\n\nexport default PoolSystem\n"],"names":["PoolSystem","parent","createEl","size","pool","diff","index","el","push","appendChild","length","ensure","pop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;IAeMA;;;;;;;sBAKQC,MAAZ,EAAoBC,QAApB,EAA8B;;;SACvBD,MAAL,GAAcA,MAAd;SACKC,QAAL,GAAgBA,QAAhB;SACKC,IAAL,GAAY,CAAZ;SACKC,IAAL,GAAY,EAAZ;;;;;;;;;;;;2BAUKD,MAAM;UACP,KAAKA,IAAL,IAAaA,IAAjB,EAAuB;UAEjBE,IAAI,GAAGF,IAAI,GAAG,KAAKA,IAAzB;;WAEK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,IAA5B,EAAkCC,KAAK,EAAvC,EAA2C;YACnCC,EAAE,GAAG,KAAKL,QAAL,EAAX;aACKE,IAAL,CAAUI,IAAV,CAAeD,EAAf;aACKN,MAAL,CAAYQ,WAAZ,CAAwBF,EAAxB;;;WAGGJ,IAAL,GAAYA,IAAZ;;;;;;;;;;;;0BAUI;UACA,CAAC,KAAKC,IAAL,CAAUM,MAAf,EAAuB;aAChBC,MAAL,CAAY,KAAKR,IAAL,GAAY,CAAxB;;;aAGK,KAAKC,IAAL,CAAUQ,GAAV,EAAP;;;;;;;;;;;yBAQGL,IAAI;WACFH,IAAL,CAAUI,IAAV,CAAeD,EAAf;;;;;;;;8BAMQ;WACHH,IAAL,GAAY,IAAZ;WACKH,MAAL,GAAc,IAAd;WACKC,QAAL,GAAgB,IAAhB;WACKC,IAAL,GAAY,IAAZ;;;;;;;;;"}