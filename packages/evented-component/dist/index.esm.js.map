{"version":3,"file":"index.esm.js","sources":["../index.js"],"sourcesContent":["/**\n * @module EventedComponent\n * @description A component that has events.\n * Extends [Component](https://github.com/okiba-gang/okiba/tree/master/packages/component) and\n * composes with [EventEmitter](https://github.com/okiba-gang/okiba/tree/master/packages/event-emitter),\n * inerithing both's method sets.\n * @see  {\"Component\": \"component\"}\n * @example\n * // FetchButton.js\n *\n * import EventedComponent from '@okiba/evented-component'\n * import {on, off} from '@okiba/dom'\n *\n * class FetchButton extends EventedComponent {\n *   constructor(args) {\n *     super(args)\n *\n *     this.onClick = this.onClick.bind(this)\n *     on(this.el, 'click', this.onClick)\n *   }\n *\n *   onClick() {\n *     fetch('/api')\n *       .then(data => this.emit('update', data))\n *   }\n *\n *   onDestroy() {\n *     off(this.el, 'click', this.onClick)\n *   }\n * }\n *\n * @example\n * // UIPiece.js\n *\n * import Component from '@okiba/component'\n *\n * const components = {\n *   fetchButton: {selector: '.fetch-button', type: FetchButton}\n * }\n *\n * class UIPiece extends Component {\n *   constructor({el, options}) {\n *     super({el, ui, components, options})\n *\n *     this.components.fetchButton.on(\n *       'update', this.update\n *     )\n *   }\n *\n *   onDestroy() {\n *     this.components.fetchButton.off(\n *       'update', this.update\n *     )\n *   }\n * }\n */\nimport Component from '@okiba/component'\nimport EventEmitter from '@okiba/event-emitter'\n\n\nexport default class EventedComponent extends Component {\n  constructor(args) {\n    super(args)\n    this.emitter = new EventEmitter()\n    /**\n     * @function on\n     * @see {\"EventEmitter::on\": \"event-emitter#emitname-data\"}\n     */\n    this.on = this.emitter.on.bind(this.emitter)\n\n    /**\n     * @function off\n     * @see {\"EventEmitter::off\": \"event-emitter##offname-handler\"}\n     */\n    this.off = this.emitter.off.bind(this.emitter)\n\n    /**\n     * @function emit\n     * @see {\"EventEmitter::emit\": \"event-emitter#emitname-data\"}\n     */\n    this.emit = this.emitter.emit.bind(this.emitter)\n  }\n\n  /**\n   *\n   * @see  {\"Component\": \"component#destroy\"}\n   */\n  destroy() {\n    Component.prototype.destroy.apply(this)\n    this.emitter.destroy()\n  }\n}\n"],"names":["EventedComponent","args","emitter","EventEmitter","on","bind","off","emit","Component","prototype","destroy","apply"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4DqBA;;;;;4BACPC,IAAZ,EAAkB;;;;;0FACVA,IAAN;UACKC,OAAL,GAAe,IAAIC,YAAJ,EAAf;;;;;;UAKKC,EAAL,GAAU,MAAKF,OAAL,CAAaE,EAAb,CAAgBC,IAAhB,CAAqB,MAAKH,OAA1B,CAAV;;;;;;UAMKI,GAAL,GAAW,MAAKJ,OAAL,CAAaI,GAAb,CAAiBD,IAAjB,CAAsB,MAAKH,OAA3B,CAAX;;;;;;UAMKK,IAAL,GAAY,MAAKL,OAAL,CAAaK,IAAb,CAAkBF,IAAlB,CAAuB,MAAKH,OAA5B,CAAZ;;;;;;;;;;;8BAOQ;MACRM,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4BC,KAA5B,CAAkC,IAAlC;WACKT,OAAL,CAAaQ,OAAb;;;;;EA7B0CF;;;;"}